#!/usr/bin/env php
<?php

/**
 * DISCLAIMER: this is the base implementation of the comparing of Clover report with its baseline.
 *
 * TODO: add generating/updating of baseline from Clover report
 */

use Aeliot\PHPUnitCodeCoverageBaseline\Comparator;
use Aeliot\PHPUnitCodeCoverageBaseline\Console\GetOpt;
use Aeliot\PHPUnitCodeCoverageBaseline\Console\OptionsConfig;
use Aeliot\PHPUnitCodeCoverageBaseline\Console\OptionsReader;
use Aeliot\PHPUnitCodeCoverageBaseline\Reader\BaselineReader;
use Aeliot\PHPUnitCodeCoverageBaseline\Reader\CloverReader;

if (isset($GLOBALS['_composer_autoload_path'])) {
    define('PHPUNIT_CCB_COMPOSER_AUTOLOAD_PATH', $GLOBALS['_composer_autoload_path']);
    unset($GLOBALS['_composer_autoload_path']);
} else {
    $paths = [
        __DIR__ . '/../../autoload.php',
        __DIR__ . '/../vendor/autoload.php',
        __DIR__ . '/vendor/autoload.php',
    ];
    foreach ($paths as $file) {
        if (file_exists($file)) {
            define('PHPUNIT_CCB_COMPOSER_AUTOLOAD_PATH', $file);
            break;
        }
    }
    unset($paths, $file);
}

if (!defined('PHPUNIT_CCB_COMPOSER_AUTOLOAD_PATH')) {
    fwrite(
        STDERR,
        'You need to set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
        '    composer install' . PHP_EOL . PHP_EOL .
        'You can learn all about Composer on https://getcomposer.org/.' . PHP_EOL
    );
    die(1);
}

require PHPUNIT_CCB_COMPOSER_AUTOLOAD_PATH;

$optionsConfig = new OptionsConfig();
$optionsConfig->add('baseline', 'b', 'phpunit.clover.baseline.json');
$optionsConfig->add('clover', 'c', 'build/coverage/clover.xml');

/** @var array{ baseline: string, clover: string } $options */
$options = (new OptionsReader($optionsConfig, new GetOpt()))->read();

try {
    $comparator = new Comparator(new BaselineReader($options['baseline']), new CloverReader($options['clover']));
    $regressedTypes = $comparator->compare();
} catch (\Exception $exception) {
    echo sprintf('[ERROR] %s%s', $exception->getMessage(), PHP_EOL);
    exit(2);
}

if ($regressedTypes) {
    echo sprintf('[ERROR] There is detected regress of code coverage on types: %s.%s', implode(', ', $regressedTypes), PHP_EOL);
    exit(1);
}
